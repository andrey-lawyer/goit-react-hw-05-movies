{"version":3,"file":"static/js/247.fec9770d.chunk.js","mappings":"4PAGaA,EAAeC,EAAAA,GAAAA,IAAH,qGAKZC,EAAYD,EAAAA,GAAAA,GAAH,uEAKTE,EAAgBF,EAAAA,GAAAA,IAAH,+CAGbG,EAAWH,EAAAA,GAAAA,EAAH,yFAKRI,EAAcJ,EAAAA,GAAAA,EAAH,mFAMXK,EAAeL,EAAAA,GAAAA,IAAH,yGAKZM,GAAUN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,2QAePQ,GAAiBR,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,mb,iDCwC3B,EAxEqB,WACnB,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WClBL,IAA4BC,EDmB/BF,GAAa,ICnBkBE,EDoBZR,ECnBdS,EAAAA,EAAAA,IAAA,6CAEmCD,EAFnC,8CAIJE,MAAK,SAAAC,GACJ,MAQIA,EAAQC,KAPVC,EADF,EACEA,OACAL,EAFF,EAEEA,GACAM,EAHF,EAGEA,MACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,WACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,aAgBF,MAAO,CACLC,UAfqBN,EAAOO,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IACHC,KAAK,KAepCf,GAAAA,EACAM,MAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAQ,WAPiBC,iCAA6BR,EAQ9CS,UAnBgBC,KAAKC,MAAqB,GAAfV,GAqB9B,KDjBER,MAAK,SAAAE,GACJN,GAAa,GACbF,EAAaQ,EACd,IACAiB,OAAM,WACLC,IAAAA,OAAAA,QAAwB,0BACzB,GACJ,GAAE,CAAC9B,IACJ,IAAQmB,EAAsDhB,EAAtDgB,UAAWL,EAA2CX,EAA3CW,MAAOC,EAAoCZ,EAApCY,SAAUS,EAA0BrB,EAA1BqB,WAAYE,EAAcvB,EAAduB,UAC1CK,GAAWC,EAAAA,EAAAA,MAEjB,GAAwC9B,EAAAA,EAAAA,UAAS,KAAjD,eAAO+B,EAAP,KAAqBC,EAArB,KAOA,OANA3B,EAAAA,EAAAA,YAAU,WACJwB,EAASI,OACXD,EAAgBH,EAASI,MAAMC,KAElC,GAAE,CAACL,EAASI,SAGX,8BACG9B,GACC,SAAC,KAAD,CACEgC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAGX,6BACE,UAAC/C,EAAD,CAASgD,GAAIZ,EAAb,UAA4B,SAA5B,eACA,UAAC3C,EAAD,YACE,gBAAKwD,IAAKtB,EAAYuB,IAAKvB,KAC3B,UAAC/B,EAAD,YACE,SAACD,EAAD,UAAYsB,KACZ,UAACpB,EAAD,yBAAsBgC,EAAtB,QACA,sCACA,SAAChC,EAAD,UAAWqB,KACX,oCACA,SAACrB,EAAD,UAAWyB,WAGf,UAACvB,EAAD,YACE,SAACD,EAAD,sCACA,2BACE,yBACE,SAACI,EAAD,CAAgB8C,GAAG,OAAnB,qBAEF,yBACE,SAAC9C,EAAD,CAAgB8C,GAAG,UAAnB,8BAIN,SAAC,EAAAG,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,UAMX,C","sources":["pages/MovieDetails.Styled.js","pages/MovieDetails.jsx","requests/axiosFullInfoMovie.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BlockFlexOne = styled.div`\n  display: flex;\n  padding-bottom: 10px;\n  border-bottom: 1px solid grey;\n`;\nexport const TitleFilm = styled.h1`\n  text-align: center;\n  margin-bottom: 35px;\n`;\n\nexport const BlockInfoFilm = styled.div`\n  padding-left: 15px;\n`;\nexport const InfoFilm = styled.p`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\nexport const Information = styled.p`\n  font-size: 16px;\n  padding: 0;\n  margin-bottom: 15px;\n`;\n\nexport const BlockInfoToo = styled.div`\n  padding-top: 15px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid grey;\n`;\nexport const NavBack = styled(NavLink)`\n  font-size: 20px;\n  margin-bottom: 5px;\n  margin-top: 3px;\n  display: block;\n  text-decoration: none;\n  color: black;\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n    color: #3f51b5;\n  }\n`;\n\nexport const NavCastReviews = styled(NavLink)`\n  margin-bottom: 10px; \n  display: block;\n  text-decoration: none;\n  color: black;\n\n  :hover:not(.active),\n  :focus-visible:not(.active) \n    text-decoration: underline;\n  font-size: 18px;\n  text-decoration: none;\n  color: #3f51b5;\n\n  &.active {\n    text-decoration: underline;\n    color: red;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport {\n  BlockFlexOne,\n  InfoFilm,\n  BlockInfoFilm,\n  NavBack,\n  BlockInfoToo,\n  Information,\n  NavCastReviews,\n  TitleFilm,\n} from './MovieDetails.Styled';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport React, { useState, useEffect, Suspense } from 'react';\nimport { axiosFullInfoMovie } from '../requests/axiosFullInfoMovie';\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [infoMovie, setInfoMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    axiosFullInfoMovie(movieId)\n      .then(data => {\n        setIsLoading(false);\n        setInfoMovie(data);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure('Something went wrong...');\n      });\n  }, [movieId]);\n  const { newGenres, title, overview, imageMovie, userScore } = infoMovie;\n  const location = useLocation();\n\n  const [locationUser, setLocationUser] = useState('/');\n  useEffect(() => {\n    if (location.state) {\n      setLocationUser(location.state.from);\n    }\n  }, [location.state]);\n\n  return (\n    <>\n      {isLoading ? (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#4a3b98\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      ) : (\n        <main>\n          <NavBack to={locationUser}>{'\\u261A'} Go Back</NavBack>\n          <BlockFlexOne>\n            <img src={imageMovie} alt={imageMovie} />\n            <BlockInfoFilm>\n              <TitleFilm>{title}</TitleFilm>\n              <InfoFilm>User Score {userScore}%</InfoFilm>\n              <h2>Overview</h2>\n              <InfoFilm>{overview}</InfoFilm>\n              <h2>Genres</h2>\n              <InfoFilm>{newGenres}</InfoFilm>\n            </BlockInfoFilm>\n          </BlockFlexOne>\n          <BlockInfoToo>\n            <Information>Additional information</Information>\n            <ul>\n              <li>\n                <NavCastReviews to=\"cast\">Cast</NavCastReviews>\n              </li>\n              <li>\n                <NavCastReviews to=\"reviews\">Reviews</NavCastReviews>\n              </li>\n            </ul>\n          </BlockInfoToo>\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </main>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport function axiosFullInfoMovie(id) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=cbd8d541379b4f719065dc7272b2c5fd`\n    )\n    .then(promise => {\n      const {\n        genres,\n        id,\n        title,\n        overview,\n        popularity,\n        poster_path,\n        vote_average,\n      } = promise.data;\n      const newArrayGenres = genres.map(el => el.name);\n      const newGenres = newArrayGenres.join(' ');\n      const userScore = Math.round(vote_average * 10);\n      const poster_sizes = [\n        'w92',\n        'w154',\n        'w185',\n        'w342',\n        'w500',\n        'w780',\n        'original',\n      ];\n      const base_url = 'http://image.tmdb.org/t/p/';\n      const imageMovie = base_url + poster_sizes[3] + poster_path;\n      return {\n        newGenres,\n        id,\n        title,\n        overview,\n        popularity,\n        imageMovie,\n        userScore,\n      };\n    });\n}\n"],"names":["BlockFlexOne","styled","TitleFilm","BlockInfoFilm","InfoFilm","Information","BlockInfoToo","NavBack","NavLink","NavCastReviews","movieId","useParams","useState","infoMovie","setInfoMovie","isLoading","setIsLoading","useEffect","id","axios","then","promise","data","genres","title","overview","popularity","poster_path","vote_average","newGenres","map","el","name","join","imageMovie","base_url","userScore","Math","round","catch","Notiflix","location","useLocation","locationUser","setLocationUser","state","from","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","to","src","alt","Suspense","fallback"],"sourceRoot":""}