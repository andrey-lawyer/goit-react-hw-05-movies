{"version":3,"file":"static/js/357.08713ba1.chunk.js","mappings":"6QACaA,EAAcC,EAAAA,GAAAA,GAAH,sBACXC,EAAcD,EAAAA,GAAAA,GAAH,yGAKXE,EAAaF,EAAAA,GAAAA,EAAH,wFAMVG,EAAUH,EAAAA,GAAAA,EAAH,oK,mJC2BpB,EA9BgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WCXL,IAA2BC,KDYZN,ECXbO,EAAAA,EAAAA,IAAA,6CAEmCD,EAFnC,sDAIJE,MAAK,SAAAC,GASJ,OARgBA,EAAQC,KAAKC,QAAQC,KACnC,kBAA4D,CAC1DN,GADF,EAAGA,GAEDO,OAFF,EAAOA,OAGLC,SAHF,EAAeC,eAAkBD,SAI/BE,QAJF,EAA6CA,QAA7C,GAQH,KDFER,MAAK,SAAAE,GACJN,EAAeM,EAChB,IACAO,OAAM,WACLC,IAAAA,OAAAA,QAAwB,0BACzB,GACJ,GAAE,CAAClB,KAGF,8BACGG,EAAYgB,OAAS,GACpB,SAAC,KAAD,UACGhB,EAAYS,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,OAAkBG,GAAzB,EAAeF,SAAf,EAAyBE,SAAzB,OACf,UAAC,KAAD,YACE,UAAC,KAAD,sBAAqBH,EAArB,QACA,uBAAIG,MAFYV,EADH,OAQnB,SAAC,KAAD,0DAIP,C","sources":["components/Reviews/Reviews.Styled.js","components/Reviews/Reviews.jsx","requests/axiosReviewsMovie.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ReviewsList = styled.ul``;\nexport const ReviewsItem = styled.li`\n  border-bottom: 1px solid grey;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\nexport const AuthorPost = styled.p`\n  font-size: 16px;\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n\nexport const Message = styled.p`\n  display: block;\n  font-size: 16px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  font-weight: 500;\n  border-bottom: 1px solid grey;\n`;\n","import Notiflix from 'notiflix';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { axiosReviewsMovie } from '../../requests/axiosReviewsMovie';\nimport {\n  ReviewsList,\n  ReviewsItem,\n  AuthorPost,\n  Message,\n} from './Reviews.Styled';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [infoReviews, setInfoReviews] = useState({});\n  useEffect(() => {\n    axiosReviewsMovie(movieId)\n      .then(data => {\n        setInfoReviews(data);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure('Something went wrong...');\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {infoReviews.length > 0 ? (\n        <ReviewsList>\n          {infoReviews.map(({ id, author, username, content }) => (\n            <ReviewsItem key={id}>\n              <AuthorPost>Author: {author} </AuthorPost>\n              <p>{content}</p>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      ) : (\n        <Message> We do not have any reviews for this movie</Message>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nexport function axiosReviewsMovie(id) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=cbd8d541379b4f719065dc7272b2c5fd`\n    )\n    .then(promise => {\n      const reviews = promise.data.results.map(\n        ({ id, author, author_details: { username }, content }) => ({\n          id,\n          author,\n          username,\n          content,\n        })\n      );\n      return reviews;\n    });\n}\n"],"names":["ReviewsList","styled","ReviewsItem","AuthorPost","Message","movieId","useParams","useState","infoReviews","setInfoReviews","useEffect","id","axios","then","promise","data","results","map","author","username","author_details","content","catch","Notiflix","length"],"sourceRoot":""}