{"version":3,"file":"static/js/406.3b0faa0e.chunk.js","mappings":"+NAEaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oPAcPE,EAAgBF,EAAAA,GAAAA,GAAH,oE,yJCdbG,EAAYH,EAAAA,GAAAA,IAAH,+CAGTI,EAAaJ,EAAAA,GAAAA,KAAH,wPAaVK,EAAmBL,EAAAA,GAAAA,OAAH,6aAkBhBM,EAAwBN,EAAAA,GAAAA,KAAH,6MAYrBO,EAAkBP,EAAAA,GAAAA,MAAH,0P,SCtCfQ,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,SAACT,EAAD,WACE,UAACC,EAAD,CAAYK,SAbK,SAAAI,GACnBA,EAAMC,iBAEoB,KAAtBH,EAAWI,QAKfN,EAASE,GACTC,EAAc,KALZI,IAAAA,OAAAA,QAAA,iCAMH,EAGG,WACE,SAACX,EAAD,CAAkBY,KAAK,SAAvB,UACE,SAACX,EAAD,wBAEF,SAACC,EAAD,CACEU,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOV,EACPW,SA3BiB,SAAAT,GACvBD,EAAcC,EAAMU,cAAcF,MAAMG,cACzC,QA8BF,E,sBC1CYC,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,EAAOG,OAAS,IACf,wBACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,IAAD,CAASC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMR,GAArC,UACE,uBAAIK,OAFCD,EADC,OAWrB,ECwCD,EAnDe,WACb,OAAoCrB,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAO0B,EAAP,KAAaC,EAAb,KACA,GAAkC3B,EAAAA,EAAAA,WAAS,GAA3C,eAAO4B,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MA8BjB,OAvBAC,EAAAA,EAAAA,YAAU,WClBL,IAA0BC,EDmBxBhC,IAGL4B,GAAa,ICtBgBI,EDuBZhC,ECtBZiC,EAAAA,EAAAA,IAAA,mGAEyFD,IAE7FE,MAAK,SAAAC,GAKJ,OAJgBA,EAAQV,KAAKW,QAAQjB,KAAI,kBAAoB,CAC3DC,GADuC,EAAGA,GAE1CC,MAFuC,EAAOA,MAAP,GAK1C,KDaEa,MAAK,SAAAT,GACAA,GACFI,EAAS,iBAAD,OAAkB7B,GAAc,CAAEqC,SAAS,IAErDT,GAAa,GACRH,EAAKP,OAMVQ,EAAQD,GALNpB,IAAAA,OAAAA,QACE,0EAKL,IACAiC,OAAM,WACLjC,IAAAA,OAAAA,QAAwB,0BACzB,IACJ,GAAE,CAACwB,EAAU7B,KAEZ,6BACE,SAACH,EAAD,CAAYC,SA9BS,SAAAE,GACvBC,EAAcD,GACd0B,EAAQ,GACT,IA4BIC,GACC,SAAC,KAAD,CACEY,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAGX,SAAC7B,EAAD,CAAkBC,OAAQU,MAIjC,C","sources":["components/ListMovies.Styled.js","pages/FormMovies.Styled.js","pages/FormMovies.jsx","components/ListSearchMovies.jsx","pages/Movies.jsx","requests/axiosSearchMovie.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const NavItem = styled(NavLink)`\n  text-decoration: none;\n  display: block;\n  font-size: 20px;\n  padding-top: 10px;\n  color: #1631cd;\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: red;\n    text-decoration: underline;\n  }\n`;\n\nexport const TitleTrending = styled.h1`\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const BlockForm = styled.div`\n  position: relative;\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  position: absolute;\n  top: -60px;\n  left: 350px;\n  z-index: 999999;\n`;\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 41px;\n  border: 0;\n  background-image: url('https://linhpham.me/miu/icons/svg/common-search-lookup-glyph.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import Notiflix from 'notiflix';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n  SearchFormButtonLabel,\n  BlockForm,\n} from './FormMovies.Styled';\nexport const FormMovies = ({ onSubmit }) => {\n  const [searchName, setSearchName] = useState('');\n\n  const handleNameChange = event => {\n    setSearchName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchName.trim() === '') {\n      Notiflix.Notify.failure(`Enter data in the search field`);\n      return;\n    }\n\n    onSubmit(searchName);\n    setSearchName('');\n  };\n  return (\n    <BlockForm>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={searchName}\n          onChange={handleNameChange}\n        />\n      </SearchForm>\n    </BlockForm>\n  );\n};\n\nFormMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { NavItem } from './ListMovies.Styled';\nexport const ListSearchMovies = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <NavItem to={`${id}`} state={{ from: location }}>\n                <p>{title}</p>\n              </NavItem>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nListSearchMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import Notiflix from 'notiflix';\nimport React, { useState, useEffect } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useNavigate } from 'react-router-dom';\n\nimport { FormMovies } from './FormMovies';\nimport { axiosSearchMovie } from '../requests/axiosSearchMovie';\nimport { ListSearchMovies } from 'components/ListSearchMovies';\n\nconst Movies = () => {\n  const [searchName, setSearchName] = useState('');\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleFormSubmit = searchName => {\n    setSearchName(searchName);\n    setData([]);\n  };\n\n  useEffect(() => {\n    if (!searchName) {\n      return;\n    }\n    setIsLoading(true);\n    axiosSearchMovie(searchName)\n      .then(data => {\n        if (data) {\n          navigate(`/movies?query=${searchName}`, { replace: true });\n        }\n        setIsLoading(false);\n        if (!data.length) {\n          Notiflix.Notify.failure(\n            'Sorry, there are no images matching your search query.Please try again.'\n          );\n          return;\n        }\n        setData(data);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure('Something went wrong...');\n      });\n  }, [navigate, searchName]);\n  return (\n    <main>\n      <FormMovies onSubmit={handleFormSubmit} />\n      {isLoading ? (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      ) : (\n        <ListSearchMovies movies={data} />\n      )}\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nexport function axiosSearchMovie(nameMovie) {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=cbd8d541379b4f719065dc7272b2c5fd&query=${nameMovie}`\n    )\n    .then(promise => {\n      const newData = promise.data.results.map(({ id, title }) => ({\n        id,\n        title,\n      }));\n      return newData;\n    });\n}\n"],"names":["NavItem","styled","NavLink","TitleTrending","BlockForm","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","FormMovies","onSubmit","useState","searchName","setSearchName","event","preventDefault","trim","Notiflix","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ListSearchMovies","movies","location","useLocation","length","map","id","title","to","state","from","data","setData","isLoading","setIsLoading","navigate","useNavigate","useEffect","nameMovie","axios","then","promise","results","replace","catch","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}